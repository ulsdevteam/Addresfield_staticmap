<?php

/**
 * Implementation of hook_permission()
 */
function addressfield_staticmap_permission() {
  return array(
    'administer addressfield staticmap' => array(
      'title' => t('Administer Address Field Static Map'),
      'description' => t('Change Google Static Map and other settings for this block.')
    ),
  );
}

/**
 * Implementation of hook_menu() 
 */
function addressfield_staticmap_menu() {
  $items['admin/config/system/addressfield_staticmap'] = array(
    'title' => 'Address Field Static Map Block',
    'description' => 'Configure settings for the address field static map block.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('addressfield_staticmap_admin_form'),
    'file' => 'addressfield_staticmap.admin.inc',
    'access arguments' => array('administer addressfield staticmap'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_block_info()
 */
function addressfield_staticmap_block_info() {
  $blocks['addressfield_staticmap'] = array(
    'info' => t('Address Field Static Map'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function addressfield_staticmap_block_view($delta = '') {
  $block = array();
  
  if ($delta != 'addressfield_staticmap') {
    return $block;
  }
  
  $node = menu_get_object();
  if (empty($node)) {
    return $block;
  }
    
  // Check if the address field name is configured
  $field_names = variable_get('addressfield_staticmap_field_names', '');
  
  if (empty($field_names)) {
    return $block;
  }
  
  $block['subject'] = t('Address Field Static Map');
  $block['content'] = '';
  
  // Do this for each of the enabled address fields
  foreach ($field_names as $field_name) {
    $fields = field_get_items('node', $node, $field_name, $node->language);
    
    if (!empty($fields)) {
      // Set up some default arguments for addressfield_generate() 
      $handlers = array('address' => 'address');
      $context = array('mode' => 'render');
      $zoom = variable_get('addressfield_staticmap_gmap_zoom', 14);
      $size = variable_get('addressfield_staticmap_gmap_size', '400x400');
      
      foreach ($fields as $id => $data) {
        $data_cleaned = array_filter($data);
        // If only the country is set, skip this (for some reason the country value
        // becomes mandatory if you limit the list)
        if (isset($data_cleaned['country']) && sizeof($data_cleaned) <= 1) {
          continue;
        }
        
        $address = drupal_render(addressfield_generate($data, $handlers, $context));
        // Add some white space so that the address can still be parsed by Google Map's API
        $address = preg_replace('/(<\/[^>]+?>)(<[^>\/][^>]*?>)/', '$1 $2', $address);
        $address = urlencode(strip_tags($address));
        
        $staticmap_url = "http://maps.googleapis.com/maps/api/staticmap?center=" . $address . "&zoom=" . $zoom . 
          "&size=" . $size . "&sensor=false&markers=color:green%7C" . $address;
        
        $image = '<img src="' . $staticmap_url . '">';
        // Link to actual Google map
        if (variable_get('addressfield_staticmap_gmap_link', FALSE)) {
          $image = '<a title="' . t("Go to Google map of this location") . '" href="http://maps.google.com/maps?q=' . $address . '">' . $image . '</a>';
        }
        $block['content'] .= $image;
      }

    }
  }
  return $block;

}